# -*- coding: utf-8 -*-
"""ERA5land_eo_estimation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZqrGjAfAO_tGy7r5jROUQ3YMqySyc9x7
"""

from google.colab import drive
drive.mount('/content/drive')

import glob

import urllib.request
import pandas as pd
import numpy as np
import datetime
import xarray as xr
!pip install netcdf4

"""ERA5land data download and pre-processing:
*   [elevation/latitude](https://colab.research.google.com/drive/10O7icT7ZZzzkYNsO04h4VidgEkmfsX1f#scrollTo=WDVOSJzCWSu7)
*   [2m temperature](https://colab.research.google.com/drive/1ZqNgYH0iE_ZIzafH2D-f-7mKkpspvWL4#scrollTo=2_MBnD3UYnSV)
*   [surface_solar_radiation_downwards](https://colab.research.google.com/drive/1enmP03gEm6HOAYHkXh_WlfVmpMEWLHKO#scrollTo=P2Y3YEzQKH5q)
*   [2m dewpoint temperature](https://colab.research.google.com/drive/1uDlFszzIJ9opTRi3-LlJYgRbVWB_CXDb)
*   [10m v-component/u-component of wind](https://colab.research.google.com/drive/1VznW4kA-7dvTne5dAuESYZYFyyzCJUes#scrollTo=uw3y3G9uwPex)





"""

PM_function = urllib.request.urlopen("https://raw.githubusercontent.com/adrHuerta/Evaporation/master/src/penman_monteith_FAO56.py")
exec(PM_function.read())

for year_i in range(1981,2020):
  
  tmax = xr.open_dataset("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/tmax/tmax_" + str(year_i) + ".nc").tmax
  tmin = xr.open_dataset("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/tmin/tmin_" + str(year_i) + ".nc").tmin
  rs = xr.open_dataset("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/rs/rs_" + str(year_i) + ".nc").rs
  td = xr.open_dataset("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/td/td_" + str(year_i) + ".nc").td
  ws = xr.open_dataset("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/ws/ws_" + str(year_i) + ".nc").ws
  z = xr.open_dataset("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/z.nc").z
  lat = xr.open_dataset("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/lat.nc").lat

  range_time = pd.date_range(str(year_i) + "-01-01", str(year_i) + "-12-31", freq="d")
  eo_year_i = []
  for time_index in range_time:

      pm_evap = penman_monteith_FAO56(time_i=int(time_index.strftime('%j')),
                                      tmax_i=tmax.sel(time=time_index).values,
                                      tmin_i=tmin.sel(time=time_index).values,
                                      rs_i=rs.sel(time=time_index).values,
                                      td_i=td.sel(time=time_index).values,
                                      lat_i=lat.values,
                                      z_i=z.values,
                                      u2_i=ws.sel(time=time_index).values)
      
      to_save = xr.open_dataset("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/z.nc")
      to_save["eo"] = (('latitude', 'longitude'), pm_evap)
      eo_year_i.append(to_save["eo"])

  
  eo_to_save = xr.concat(eo_year_i, dim="time")
  eo_to_save["time"] = range_time
  encoding_eo = {v: {'zlib': True, 'complevel': 5} for v in ["eo"]}
  eo_to_save.to_netcdf("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/eo/eo_" + str(year_i) + ".nc", encoding=encoding_eo, engine='netcdf4')
  print(year_i)

eo_all_files = [xr.open_dataset("/content/drive/MyDrive/Google_Colab_temp/ERA5land/for_eo_computation/eo/eo_" + str(year_i) + ".nc") for year_i in range(1981,2020)]

eo_all_files = xr.concat(eo_all_files, dim="time")
eo_all_files = eo_all_files.astype("float32")

encoding = {v: {'zlib': True, 'complevel': 5} for v in ["eo"]}

eo_all_files.to_netcdf("/content/drive/MyDrive/PISCOeo_pm_big_data/Global_gridded_products/ERA5land_Eo_Peru_1981_2019_daily_ts.nc", encoding=encoding, engine='netcdf4')

eo_daily = xr.open_dataset("/content/drive/MyDrive/PISCOeo_pm_big_data/Global_gridded_products/ERA5land_Eo_Peru_1981_2019_daily_ts.nc")

eo_daily

eo_daily.sel(time="2016-12-05").eo.plot()

eo_daily.sel(time="2016-12-05").where(eo_daily.sel(time="2016-12-05").eo < 3,drop=True).eo.plot()

eo_monthly = eo_daily.resample(time="1M").sum()
eo_monthly.to_netcdf("/content/drive/MyDrive/PISCOeo_pm_big_data/Global_gridded_products/ERA5land_Eo_Peru_1981_2019_monthly_sum_ts.nc", encoding=encoding, engine='netcdf4')

eo_monthly.resample(time="1Y").sum().to_netcdf("/content/drive/MyDrive/PISCOeo_pm_big_data/Global_gridded_products/ERA5land_Eo_Peru_1981_2019_yearly_sum_ts.nc", encoding=encoding, engine='netcdf4')

eo_monthly.sel(time=slice("1981-01-01", "2010-12-31")).groupby('time.month').mean(dim="time").to_netcdf("/content/drive/MyDrive/PISCOeo_pm_big_data/Global_gridded_products/ERA5land_Eo_Peru_1981_2010_monthly_sum_mean.nc", encoding=encoding, engine='netcdf4')

