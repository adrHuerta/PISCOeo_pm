# -*- coding: utf-8 -*-
"""CRU_TS_Eo_donwload.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oXNf6d5CDuQgFhyBK7bptdSaQIT5IhEc
"""

import xarray as xr
import numpy as np
import pandas as pd
import glob
import requests
# !pip install netcdf4
# !pip install rasterio

from google.colab import drive
drive.mount('/content/drive')

# years_i = np.arange(1981, 2021, 10)
# years_f = np.arange(1990, 2021, 10)

# for i, j in zip(years_i, years_f):

#   name_file = "cru_ts4.05.YI.YF.pet.dat.nc.gz".replace("YI", str(i)).replace("YF", str(j))
#   url_name_file = "https://crudata.uea.ac.uk/cru/data/hrg/cru_ts_4.05/cruts.2103051243.v4.05/pet/" + name_file
#   filename = url_name_file.split("/")[-1]
#   print(filename)
    
#   with open("/content/drive/MyDrive/temporal/CRU_TS/" + filename, "wb") as f:
#     r = requests.get(url_name_file)
#     f.write(r.content)

nc_file = sorted(glob.glob("/content/drive/MyDrive/temporal/CRU_TS/*.gz"))
nc_file = [xr.open_dataset(i) for i in nc_file]
nc_file = xr.concat(nc_file, dim="time").sel(time=slice("1981-01-01","2019-12-31"))
nc_file = nc_file.where((-82 < nc_file.lon) & (nc_file.lon < -67) & (-19 < nc_file.lat) & (nc_file.lat < 2), drop=True)

days_by_month = [pd.Period(str(i)).days_in_month for i in nc_file.time.values]

nc_file_monthly_data = []

for xi in range(len(days_by_month)):
  nc_file_monthly_data.append(nc_file.isel(time=xi)*days_by_month[xi])

nc_file_monthly_data = xr.concat(nc_file_monthly_data, dim="time")
nc_file_monthly_data = nc_file_monthly_data.rename({"pet":"eo"})
encoding = {v: {'zlib': True, 'complevel': 5} for v in ["eo"]}

nc_file_monthly_data

nc_file_monthly_data.to_netcdf("/content/drive/MyDrive/PISCOeo_pm_big_data/Global_gridded_products/CRU_Eo_Peru_1981_2019_monthly_sum_ts.nc", encoding=encoding, engine='netcdf4')

nc_file_monthly_data.resample(time="1Y").sum().to_netcdf("/content/drive/MyDrive/PISCOeo_pm_big_data/Global_gridded_products/CRU_Eo_Peru_1981_2019_yearly_sum_ts.nc", encoding=encoding, engine='netcdf4')

nc_file_monthly_data.sel(time=slice("1981-01-01", "2010-12-31")).groupby('time.month').mean(dim="time").to_netcdf("/content/drive/MyDrive/PISCOeo_pm_big_data/Global_gridded_products/CRU_Eo_Peru_1981_2010_monthly_sum_mean.nc")

def count_na(a, axis=None):
  res = np.sum(~np.isnan(a), axis=axis)
  return res

exp = nc_file_monthly_data.resample(time="1Y").reduce(func=count_na, dim="time")

exp.isel(time=0)

