# -*- coding: utf-8 -*-
"""calculation_mean_sensitivity.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17GbENwyYIhYyEqiKsn9KEIkomZJy5qX9
"""

from google.colab import drive
drive.mount('/content/drive')

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !pip install glob

import glob
import xarray as xr

"""## Mean monthly average of S* (1981-2016)"""

def mean_monthly_average(S_var):
    S_files = sorted(glob.glob("/content/drive/MyDrive/DATA_FT/version_rc/S/"+ S_var +"/*.nc"))
    S_monthly_var_mean = []
    for month_i in range(1, 13):
        print(month_i)
        month_files = [string for string in S_files if str(month_i).zfill(2) in string.split("_")[5].split(".")[0]]
        month_files = xr.concat([xr.open_dataset(file).mean(dim="time") for file in month_files], dim="time")
        S_monthly_var_mean.append(month_files.mean(dim="time"))

    S_monthly_var_mean = (xr.concat(S_monthly_var_mean, dim="month"))
    
    return S_monthly_var_mean

path_save_file="/content/drive/MyDrive/S_clim/"

stmax_monthly_var_mean = mean_monthly_average("Stmax")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Stmax"]}
stmax_monthly_var_mean.to_netcdf(path_save_file+"Stmax_monthly_mean_clim.nc", encoding=encoding, engine='netcdf4')

stmin_monthly_var_mean = mean_monthly_average("Stmin")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Stmin"]}
stmin_monthly_var_mean.to_netcdf(path_save_file+"Stmin_monthly_mean_clim.nc", encoding=encoding, engine='netcdf4')

sea_monthly_var_mean = mean_monthly_average("Sea")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Sea"]}
sea_monthly_var_mean.to_netcdf(path_save_file+"Sea_monthly_mean_clim.nc", encoding=encoding, engine='netcdf4')

srn_monthly_var_mean = mean_monthly_average("Srn")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Srn"]}
srn_monthly_var_mean.to_netcdf(path_save_file+"Srn_monthly_mean_clim.nc", encoding=encoding, engine='netcdf4')

sws_monthly_var_mean = mean_monthly_average("Sws")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Sws"]}
sws_monthly_var_mean.to_netcdf(path_save_file+"Sws_monthly_mean_clim.nc", encoding=encoding, engine='netcdf4')

"""## Mean annual average of S* (1981-2016)"""

def mean_annual_average(S_var):
    S_files = sorted(glob.glob("/content/drive/MyDrive/DATA_FT/version_rc/S/"+S_var+"/*.nc"))
    S_annual_var_mean = []
    for year_i in range(1981,2017):
        print(year_i)
        year_files = [string for string in S_files if str(year_i) in string.split("_")[4]]
        year_files = xr.concat([xr.open_dataset(file).mean(dim="time") for file in year_files], dim="time")
        S_annual_var_mean.append(year_files.mean(dim="time"))

    S_annual_var_mean = (xr.concat(S_annual_var_mean, dim="time")).mean(dim="time")

    return S_annual_var_mean

#stmax_annual_var_mean = mean_annual_average("Stmax")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Stmax"]}
stmax_annual_var_mean.to_netcdf(path_save_file+"Stmax_annual_mean_clim.nc", encoding=encoding, engine='netcdf4')

stmin_annual_var_mean = mean_annual_average("Stmin")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Stmin"]}
stmin_annual_var_mean.to_netcdf(path_save_file+"Stmin_annual_mean_clim.nc", encoding=encoding, engine='netcdf4')

sea_annual_var_mean = mean_annual_average("Sea")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Sea"]}
sea_annual_var_mean.to_netcdf(path_save_file+"Sea_annual_mean_clim.nc", encoding=encoding, engine='netcdf4')

srn_annual_var_mean = mean_annual_average("Srn")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Srn"]}
srn_annual_var_mean.to_netcdf(path_save_file+"Srn_annual_mean_clim.nc", encoding=encoding, engine='netcdf4')

sws_annual_var_mean = mean_annual_average("Sws")
# save
encoding = {v: {'zlib': True, 'complevel': 9} for v in ["Sws"]}
sws_annual_var_mean.to_netcdf(path_save_file+"Sws_annual_mean_clim.nc", encoding=encoding, engine='netcdf4')