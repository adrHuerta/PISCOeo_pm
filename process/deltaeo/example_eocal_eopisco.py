# -*- coding: utf-8 -*-
"""example_Eocal_Eopisco.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rrdyLtg7OitXcb8YvqCK3AxSGfKAa4p8
"""

from google.colab import drive
drive.mount('/content/drive/')

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !pip install netcdf4
# !pip install geopandas

import xarray as xr
import numpy as np
from sympy import *
import matplotlib.pyplot as plt

# Define time
year_i=1981
month_i=1
day_i=20

path_netcd_01 = "/content/drive/MyDrive/DATA_FT/version_rc/"

delta_i = xr.open_dataset(path_netcd_01+"delta/daily/delta_daily"+"_"+str(year_i)+ "_"+str(month_i).zfill(2)+".nc").isel(time=day_i).delta
gamma_i = xr.open_dataset(path_netcd_01+"gamma/gamma.nc").gamma
ws_i = xr.open_dataset(path_netcd_01+"/ws/normal/ws_mean.nc").isel(time=month_i-1).ws
ea_i = xr.open_dataset(path_netcd_01+"ea/daily/ea_daily"+"_"+str(year_i)+ "_"+str(month_i).zfill(2)+".nc").isel(time=day_i).ea
es_i = xr.open_dataset(path_netcd_01+"es/daily/es_daily"+"_"+str(year_i)+ "_"+str(month_i).zfill(2)+".nc").isel(time=day_i).es
tmax_i = xr.open_dataset(path_netcd_01+"tmax/daily/tmax_daily"+"_"+str(year_i)+ "_"+str(month_i).zfill(2)+".nc").isel(time=day_i).tmax
tmin_i = xr.open_dataset(path_netcd_01+"tmin/daily/tmin_daily"+"_"+str(year_i)+ "_"+str(month_i).zfill(2)+".nc").isel(time=day_i).tmin  
rn_i = xr.open_dataset(path_netcd_01+"rn/daily/rn_daily"+"_"+str(year_i)+ "_"+str(month_i).zfill(2)+".nc").isel(time=day_i).rn      
eo_i = xr.open_dataset(path_netcd_01+"eo/daily/eo_daily"+"_"+str(year_i)+ "_"+str(month_i).zfill(2)+".nc").isel(time=day_i).eo

"""## E quation PM-FAO"""

# Equation
# variables Penman Monteith
DELTA = Symbol('DELTA')
GAMMA = Symbol("GAMMA")
Rn = Symbol("Rn")
G = Symbol("G")
Tx = Symbol("Tx")
Tn = Symbol("Tn")
u2 = Symbol("u2")
es = Symbol("es")
ea = Symbol("ea")

# Penman Monteith FAO56 equation
f = (0.408*DELTA*(Rn-G) + GAMMA*(900/(((Tx+Tn)/2)+273))*u2*(es-ea))/(DELTA + GAMMA*(1+0.34*u2))

f

"""## Eo calculation"""

eo_cal_i = ((0.48*delta_i*rn_i)+((gamma_i*900*ws_i*(-ea_i+es_i))/((tmax_i/2)+(tmin_i/2)+273)))/(delta_i+gamma_i*(0.34*ws_i+1))

#eo_cal_i

"""## Eo interpolation"""

eo_i

"""## PLOTS"""

fig, (ax1,ax2) = plt.subplots(ncols=2, nrows = 1,  dpi = 100)

eo_cal_i.plot(ax = ax1)
ax1.set_title('Eo Cal')
ax1.axis('off')

eo_i.plot(ax=ax2)
ax2.set_title('Eo pisco')
ax2.axis('off')

dif=eo_cal_i-eo_i

dif.where(dif<=0.5).plot()

