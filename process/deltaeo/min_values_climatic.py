# -*- coding: utf-8 -*-
"""min_values_climatic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qvp3YLK_SquGxCuv2A_Al8IsPqUe7tp1
"""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !pip install glob
# !pip install netcdf4
# !pip install geopandas

import glob
import xarray as xr
import netCDF4

from google.colab import drive
drive.mount('/content/drive/')

# min to tmax 
tmax_min = [(xr.open_dataset(i)).min(dim="time") for i in sorted(glob.glob("/content/drive/MyDrive/DATA_FT/version_rc/tmax/daily/*.nc"))[:420]]
tmax_min = xr.concat(tmax_min, dim="time")
tmax_min = tmax_min.min(dim="time")
#tmax_min.tmax.min()

#tmax_min.tmax.plot()

# min to tmin
tmin_min = [(xr.open_dataset(i)).min(dim="time") for i in sorted(glob.glob("/content/drive/MyDrive/DATA_FT/version_rc/tmin/daily/*.nc"))[:420]]
tmin_min = xr.concat(tmin_min, dim="time")
tmin_min= tmin_min.min(dim="time")
#tmin_min.tmin.min()

# min to wd
ws_min = [(xr.open_dataset(i)).min(dim="time") for i in sorted(glob.glob("/content/drive/MyDrive/DATA_FT/version_rc/ws/normal/*.nc"))[:12]]
ws_min = xr.concat(ws_min, dim="time")
ws_min= ws_min.min(dim="time")
#ws_min.ws.min()

# min to ea
ea_min = [(xr.open_dataset(i)).min(dim="time") for i in sorted(glob.glob("/content/drive/MyDrive/DATA_FT/version_rc/ea/daily/*.nc"))[:420]]
ea_min = xr.concat(ea_min, dim="time")
ea_min= ea_min.min(dim="time")
#ea_min.ws.min()

# min to es
es_min = [(xr.open_dataset(i)).min(dim="time") for i in sorted(glob.glob("/content/drive/MyDrive/DATA_FT/version_rc/es/daily/*.nc"))[:420]]
es_min = xr.concat(es_min, dim="time")
es_min= es_min.min(dim="time")
#ea_min.ws.min()

# min to rn
Rn_min = [(xr.open_dataset(i)).min(dim="time") for i in sorted(glob.glob("/content/drive/MyDrive/DATA_FT/version_rc/rn/daily/*.nc"))[:420]]
Rn_min = xr.concat(Rn_min, dim="time")
Rn_min= Rn_min.min(dim="time")
#Rn_min.ws.min()

# min to delta
delta_min = [(xr.open_dataset(i)).min(dim="time") for i in sorted(glob.glob("/content/drive/MyDrive/DATA_FT/version_rc/delta/daily/*.nc"))[:420]]
delta_min = xr.concat(delta_min, dim="time")
delta_min= delta_min.min(dim="time")
#Rn_min.ws.min()

# merge together
var_min_clim= xr.merge([tmax_min, tmin_min, ea_min, es_min, ws_min, Rn_min, delta_min]).load()
var_min_clim

new_filename_1 = '/content/drive/MyDrive/variables_min_clim/var_min_clim.nc'
print ('saving to ', new_filename_1)
var_min_clim.to_netcdf(path=new_filename_1)
print ('finished saving')

